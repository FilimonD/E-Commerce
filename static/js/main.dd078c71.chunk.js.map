{"version":3,"sources":["components/storeContext.js","components/Navbar.js","components/Trainer.js","components/Trainers.js","components/HomeScreen.js","components/Clothing.js","components/ClothingScreen.js","components/Accessory.js","components/AccessoriesScreen.js","components/CheckoutScreen.js","components/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["StoreContext","React","createContext","initialState","cartReducer","state","action","type","itemIndex","product","size","findIndex","item","id","color","findItemIndex","newItem","name","quantity","price","slice","length","productIndex","update","splice","StoreProvider","children","useReducer","dispatch","Provider","value","useStore","useContext","PrimaryNav","Navbar","sticky","className","expand","Brand","style","to","Toggle","aria-controls","Collapse","Nav","textDecoration","total","reduce","getQuantity","sizes","Array","from","_","i","quantities","Trainer","props","useState","setSize","setQuantity","Col","xs","md","lg","xl","Card","toString","Img","height","objectFit","variant","src","imageUrl","Body","Title","Text","Form","Group","maxWidth","controlId","Label","Control","as","onChange","event","target","map","key","Number","Button","onClick","shoeItem","image","addToStore","Trainers","trainers","setTrainers","addToCart","useEffect","fetch","then","response","json","Container","Row","shoe","HomeScreen","categories","setCategories","Jumbotron","fluid","paddingBottom","paddingTop","category","width","toUpperCase","Clothing","clothingItem","ClothingScreen","clothings","setClothings","clothing","colors","Accessory","setColor","accessoryItem","AccessoriesScreen","accessories","setAccessories","accessory","CheckoutScreen","removeFromCart","textAlign","NotFound","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dd078c71.chunk.js","sourcesContent":["import React, { useReducer } from \"react\";\n\nconst StoreContext = React.createContext();\nconst initialState = [];\n\nconst findItemIndex = (state, product) =>\n  product.size\n    ? state.findIndex(\n        item => item.id === product.id && item.size === product.size\n      )\n    : product.color\n    ? state.findIndex(\n        item => item.id && product.id && item.color === product.color\n      )\n    : state.findIndex(item => item.id === product.id);\n\nfunction cartReducer(state, action) {\n  switch (action.type) {\n    case \"add\":\n      const itemIndex = findItemIndex(state, action.product);\n\n      if (itemIndex === -1) {\n        return [...state, action.product];\n      } else {\n        const newItem = {\n          id: action.product.id,\n          name: action.product.name,\n          size: action.product.size,\n          quantity: action.product.quantity + state[itemIndex].quantity,\n          price: action.product.price\n          // price:\n          //   action.product.price *\n          //   (action.product.quantity + state[itemIndex].quantity)\n        };\n        const updatedStore = [\n          ...state.slice(0, itemIndex),\n          ...state.slice(itemIndex + 1, state.length),\n          newItem\n        ];\n        return updatedStore;\n      }\n\n    case \"remove\":\n      const productIndex = state.findIndex(\n        item => item.name === action.product.name\n      );\n      if (productIndex < 0) {\n        return state;\n      }\n      const update = [...state];\n      update.splice(productIndex, 1);\n      return update;\n    default:\n      return state;\n  }\n}\n\nexport const StoreProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(cartReducer, initialState);\n  return (\n    <StoreContext.Provider value={{ state, dispatch }}>\n      {children}\n    </StoreContext.Provider>\n  );\n};\n\nexport const useStore = () => React.useContext(StoreContext);\n\n// export default function Product() {\n//   const [cart, setCart] = useReducer(cartReducer, []);\n","import React from \"react\";\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useStore } from \"./storeContext\";\n\nconst PrimaryNav = () => {\n  const { state, dispatch } = useStore();\n\n  function getQuantity() {\n    const total = state.reduce((total, item) => {\n      return (total += item.quantity);\n    }, 0);\n    if (total > 0) {\n      return `(${total})`;\n    }\n  }\n\n  return (\n    <Navbar sticky=\"top\" className=\"navbar-items\" expand=\"md\">\n      <Navbar.Brand style={{ color: \"white\" }}>\n        <Link to=\"/\">Bouna-Sal</Link>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav\n          className=\"mr-auto\"\n          style={{ textDecoration: \"none\", color: \"white\" }}\n        >\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/clothings\">Clothings</Link>\n          <Link to=\"/trainers\">Trainers</Link>\n          <Link to=\"/accessories\">Accessories</Link>\n        </Nav>\n        <Nav className=\"mr-2\">\n          <Link to=\"/checkout\">Checkout {getQuantity()} </Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default PrimaryNav;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Card, Button, Form } from \"react-bootstrap\";\n\nconst sizes = Array.from(Array(10), (_, i) => i + 1);\nconst quantities = Array.from(Array(10), (_, i) => i + 1);\n\nfunction Trainer(props) {\n  const [size, setSize] = useState(sizes[0]);\n  const [quantity, setQuantity] = useState(quantities[0]);\n\n  const handleSizeChange = event => {\n    setSize(event.target.value);\n  };\n\n  const handleQuantityChange = event => {\n    setQuantity(Number(event.target.value));\n  };\n\n  const handleAddToCart = () => {\n    const shoeItem = {\n      id:props.id,\n      name: props.name,\n      price: props.price,\n      image: props.imageUrl,\n      size: size,\n      quantity: quantity\n    };\n\n    props.addToStore(shoeItem);\n  };\n\n  return (\n    <Col className=\"mb-5\" xs={12} md={6} lg={4} xl={3}>\n      <Card>\n        <Link to={\"/trainers/\" + props.id.toString()}>\n          <Card.Img\n            style={{ height: \"300px\", objectFit: \"contain\" }}\n            variant=\"top\"\n            src={props.imageUrl}\n          />\n        </Link>\n        <Card.Body style={{ height: \"100%\" }}>\n          <Card.Title style={{ height: \"48px\" }}>\n            <h6>{props.name}</h6>\n          </Card.Title>\n          <Card.Text>£{props.price}</Card.Text>\n          <Form.Group\n            style={{ maxWidth: \"fit-content\" }}\n            controlId=\"exampleForm.ControlSelect1\"\n          >\n            <Form.Label>Select Size</Form.Label>\n            <Form.Control as=\"select\" onChange={handleSizeChange} value={size}>\n              {sizes.map(size => (\n                <option key={size}>{size}</option>\n              ))}\n            </Form.Control>\n            <Form.Label> Quantity</Form.Label>\n            <Form.Control\n              style={{ maxWidth: \"fit-content\" }}\n              as=\"select\"\n              onChange={handleQuantityChange}\n              value={quantity}\n            >\n              {quantities.map(quantity => (\n                <option key={quantity}>{quantity}</option>\n              ))}\n            </Form.Control>\n          </Form.Group>\n\n          <Button onClick={handleAddToCart} variant=\"primary\">\n            Add To Cart\n          </Button>\n        </Card.Body>\n      </Card>\n    </Col>\n  );\n}\n\nexport default Trainer;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Container, Row, Col, Card, Button, Form } from \"react-bootstrap\";\nimport { useStore } from \"./storeContext\";\nimport Trainer from \"./Trainer\";\n\nfunction Trainers() {\n  const [trainers, setTrainers] = useState([]);\n  const { state, dispatch } = useStore();\n\n  useEffect(() => {\n    fetch(\"https://bouna-sal.herokuapp.com/trainers\")\n      .then(response => response.json())\n      .then(trainers => setTrainers(trainers));\n  }, []);\n\n  function addToCart(shoeItem) {\n    dispatch({ product: shoeItem, type: \"add\" });\n  }\n\n  return (\n    <Container className=\"my-5\">\n      <Row>\n        {trainers.map(shoe => {\n          return (\n            <Trainer\n              key={shoe.id}\n              id={shoe.id}\n              imageUrl={shoe.imageUrl}\n              price={shoe.price}\n              name={shoe.name}\n              addToStore={addToCart}\n            />\n          );\n        })}\n      </Row>\n    </Container>\n  );\n}\n\nexport default Trainers;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col, Card, Jumbotron } from \"react-bootstrap\";\n\nfunction HomeScreen() {\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    fetch(\"https://bouna-sal.herokuapp.com/categories\")\n      .then(response => response.json())\n      .then(categories => setCategories(categories));\n  }, []);\n\n  return (\n    <>\n      <Jumbotron fluid className=\"hero mb-0\">\n        <Container style={{ paddingBottom: \"8rem\", paddingTop: \"8rem\" }}>\n          <h1>Become the best version of yourself</h1>\n          <p>Welcome to our home page</p>\n        </Container>\n      </Jumbotron>\n\n      <Container className=\"my-5 gym\">\n        <Row>\n          {categories.map(category => {\n            return (\n              <Col\n                key={category.id}\n                className=\"mb-5 \"\n                xs={12}\n                md={6}\n                lg={4}\n                xl={4}\n              >\n                <Link to={category.name}>\n                  <Card className=\"mt-0 py-0\">\n                    <Card.Img\n                      className=\"Home-images\"\n                      variant=\"top\"\n                      src={category.imageUrl}\n                      style={{\n                        height: \"250px\",\n                        width: \"100%\",\n                        objectFit: \"contain\"\n                      }}\n                    />\n                    <Card.Body className=\"py-1\">\n                      <Card.Title\n                        className=\"mb-1 text-center\"\n                        style={{ textDecoration: \"none\", color: \"blue\" }}\n                      >\n                        {category.name.toUpperCase()}\n                      </Card.Title>\n                    </Card.Body>\n                  </Card>\n                </Link>\n              </Col>\n            );\n          })}\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default HomeScreen;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Card, Button, Form } from \"react-bootstrap\";\n\nconst sizes = [\"X-small\", \"Small\", \"Medium\", \"Large\"];\nconst quantities = Array.from(Array(10), (_, i) => i + 1);\n\nfunction Clothing(props) {\n  const [size, setSize] = useState(sizes[0]);\n  const [quantity, setQuantity] = useState(quantities[0]);\n\n  const handleSizeChange = event => {\n    setSize(event.target.value);\n  };\n\n  const handleQuantityChange = event => {\n    setQuantity(Number(event.target.value));\n  };\n\n  const handleAddToCart = () => {\n    const clothingItem = {\n      id: props.id,\n      name: props.name,\n      price: props.price,\n      image: props.imageUrl,\n      size: size,\n      quantity: quantity\n    };\n\n    props.addToStore(clothingItem);\n  };\n\n  return (\n    <Col className=\"mb-5\" xs={12} md={6} lg={4} xl={3}>\n      <Card>\n        <Link to={\"/clothings/\" + props.id.toString()}>\n          <Card.Img\n            style={{ height: \"300px\", objectFit: \"contain\" }}\n            variant=\"top\"\n            src={props.imageUrl}\n          />\n        </Link>\n        <Card.Body style={{ height: \"100%\" }}>\n          <Card.Title style={{ height: \"48px\" }}>{props.name}</Card.Title>\n          <Card.Text>£{props.price}</Card.Text>\n          <Form.Group\n            style={{ maxWidth: \"fit-content\" }}\n            controlId=\"exampleForm.ControlSelect1\"\n          >\n            <Form.Label>Select Size</Form.Label>\n            <Form.Control as=\"select\" onChange={handleSizeChange} value={size}>\n              {sizes.map(size => (\n                <option key={size}>{size}</option>\n              ))}\n            </Form.Control>\n            <Form.Label>Quantity</Form.Label>\n            <Form.Control\n              style={{ maxWidth: \"fit-content\" }}\n              as=\"select\"\n              onChange={handleQuantityChange}\n              value={quantity}\n            >\n              {quantities.map(quantity => (\n                <option key={quantity}>{quantity}</option>\n              ))}\n            </Form.Control>\n          </Form.Group>\n\n          <Button onClick={handleAddToCart} variant=\"primary\">\n            Add To Cart\n          </Button>\n        </Card.Body>\n      </Card>\n    </Col>\n  );\n}\n\nexport default Clothing;\n","import React, { useState, useEffect } from \"react\";\nimport { Container, Row} from \"react-bootstrap\";\nimport { useStore } from \"./storeContext\";\nimport Clothing from \"./Clothing\";\n\nfunction ClothingScreen() {\n  const [clothings, setClothings] = useState([]);\n  const { state, dispatch } = useStore();\n  useEffect(() => {\n    fetch(\"https://bouna-sal.herokuapp.com/clothings\")\n      .then(response => response.json())\n      .then(clothings => setClothings(clothings));\n  }, []);\n\n  function addToCart(clothing) {\n    dispatch({ product: clothing, type: \"add\" });\n  }\n\n  return (\n    <Container className=\"my-5\">\n      <Row>\n        {clothings.map(clothing => {\n          return (\n            <Clothing\n              key={clothing.id}\n              id={clothing.id}\n              imageUrl={clothing.imageUrl}\n              price={clothing.price}\n              name={clothing.name}\n              addToStore={addToCart}\n            />\n          );\n        })}\n      </Row>\n    </Container>\n  );\n}\n\nexport default ClothingScreen;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Card, Button, Form } from \"react-bootstrap\";\n\nconst colors = [\"Red\", \"Blue\", \"Black\"];\nconst quantities = Array.from(Array(10), (_, i) => i + 1);\n\nfunction Accessory(props) {\n  const [color, setColor] = useState(colors[0]);\n  const [quantity, setQuantity] = useState(quantities[0]);\n\n  const handleColorChange = event => {\n    setColor(event.target.value);\n  };\n\n  const handleQuantityChange = event => {\n    setQuantity(Number(event.target.value));\n  };\n\n  const handleAddToCart = () => {\n    const accessoryItem = {\n      id: props.id,\n      name: props.name,\n      price: props.price,\n      image: props.imageUrl,\n      color: color,\n      quantity: quantity\n    };\n\n    props.addToStore(accessoryItem);\n  };\n\n  return (\n    <Col className=\"mb-5\" xs={12} md={6} lg={4} xl={3}>\n      <Card>\n        <Link to={\"/accessories/\" + props.id.toString()}>\n          <Card.Img\n            style={{ height: \"300px\", objectFit: \"contain\" }}\n            variant=\"top\"\n            src={props.imageUrl}\n          />\n        </Link>\n        <Card.Body style={{ height: \"100%\" }}>\n          <Card.Title style={{ height: \"48px\" }}>\n            <h6>{props.name}</h6>\n          </Card.Title>\n          <Card.Text>£{props.price}</Card.Text>\n          <Form.Group\n            style={{ maxWidth: \"fit-content\" }}\n            controlId=\"exampleForm.ControlSelect1\"\n          >\n            <Form.Label>Select Color</Form.Label>\n            <Form.Control\n              as=\"select\"\n              onChange={handleColorChange}\n              value={color}\n            >\n              {colors.map(color => (\n                <option key={color}>{color}</option>\n              ))}\n            </Form.Control>\n            <Form.Label>Quantity</Form.Label>\n            <Form.Control\n              style={{ maxWidth: \"fit-content\" }}\n              as=\"select\"\n              onChange={handleQuantityChange}\n              value={quantity}\n            >\n              {quantities.map(quantity => (\n                <option key={quantity}>{quantity}</option>\n              ))}\n            </Form.Control>\n          </Form.Group>\n\n          <Button onClick={handleAddToCart} variant=\"primary\">\n            Add To Cart\n          </Button>\n        </Card.Body>\n      </Card>\n    </Col>\n  );\n}\n\nexport default Accessory;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col, Card, Button, Form } from \"react-bootstrap\";\nimport { useStore, storeContext } from \"./storeContext\";\nimport Accessory from \"./Accessory\";\n\nfunction AccessoriesScreen() {\n  const [accessories, setAccessories] = useState([]);\n  const { state, dispatch } = useStore();\n  useEffect(() => {\n    fetch(\"https://bouna-sal.herokuapp.com/accessories\")\n      .then(response => response.json())\n      .then(accessories => setAccessories(accessories));\n  }, []);\n\n  function addToCart(accessory) {\n    dispatch({ product: accessory, type: \"add\" });\n  }\n\n  return (\n    <Container className=\"my-5\">\n      <Row>\n        {accessories.map(accessory => {\n          return (\n            <Accessory\n              key={accessory.id}\n              id={accessory.id}\n              imageUrl={accessory.imageUrl}\n              price={accessory.price}\n              name={accessory.name}\n              addToStore={addToCart}\n            />\n          );\n        })}\n      </Row>\n    </Container>\n  );\n}\n\nexport default AccessoriesScreen;\n","import React, { useState } from \"react\";\nimport { useStore } from \"./storeContext\";\nimport { Button, Container, Row } from \"react-bootstrap\";\n\nfunction CheckoutScreen() {\n  const { state, dispatch } = useStore();\n\n  function removeFromCart(item) {\n    dispatch({ product: item, type: \"remove\" });\n  }\n  const currencyOptions = {\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  };\n\n  function getTotal() {\n    const totalPrice = state.reduce((total, item) => {\n      return (total += item.price * item.quantity);\n    }, 0);\n    return totalPrice;\n  }\n\n  return (\n    <Container className=\"ml-2 mt-5 checkout\">\n      <table className=\"mt-5 \">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Price</th>\n            <th>Size</th>\n            <th>Color</th>\n            <th>Quantity</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {state.map(item => (\n            <tr key={item.name}>\n              <td>{item.name}</td>\n\n              <td>£{item.price}</td>\n              <td>{item.size}</td>\n              <td>{item.color}</td>\n              <td>{item.quantity}</td>\n              <td>\n                <Button\n                  className=\"ml-1 py-0\"\n                  onClick={() => removeFromCart(item)}\n                  variant=\"primary\"\n                >\n                  Remove from cart\n                </Button>\n              </td>\n            </tr>\n          ))}\n\n          <tr>\n            <td>Total items:{state.length}</td>\n            <td style={{ textAlign: \"end\" }}>Total is :£{getTotal()}</td>\n          </tr>\n        </tbody>\n      </table>\n    </Container>\n  );\n}\n\nexport default CheckoutScreen;\n","import React from \"react\";\n\nfunction NotFound() {\n  return <h1>We are are Sorry Page Not Found</h1>;\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport { BrowserRouter, Route, Link, Switch } from \"react-router-dom\";\n\nimport Navbar from \"./components/Navbar\";\nimport Trainers from \"./components/Trainers\";\nimport HomeScreen from \"./components/HomeScreen\";\nimport ClothingScreen from \"./components/ClothingScreen\";\nimport AccessoriesScreen from \"./components/AccessoriesScreen\";\nimport { StoreProvider } from \"./components/storeContext\";\nimport CheckoutScreen from \"./components/CheckoutScreen\";\nimport NotFound from \"./components/NotFound\";\nimport index from \"./index.css\";\nimport { NOTFOUND } from \"dns\";\n\nfunction App() {\n  return (\n    <StoreProvider>\n      <div className=\"App\">\n        <BrowserRouter>\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/E-Commerce\">\n              <HomeScreen />\n            </Route>\n            <Route exact path=\"/trainers\">\n              <Trainers />\n            </Route>\n\n            <Route exact path=\"/clothings\">\n              <ClothingScreen />\n            </Route>\n\n            <Route exact path=\"/accessories\">\n              <AccessoriesScreen />\n            </Route>\n            <Route>\n              <NotFound />\n            </Route>\n            <Route exact path=\"/checkout\">\n              <CheckoutScreen />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n      </div>\n      <footer className=\"footer\"> All rights Reserved</footer>\n    </StoreProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport index from \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}