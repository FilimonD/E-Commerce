{"version":3,"sources":["components/storeContext.js","components/Navbar.js","components/Trainer.js","components/Trainers.js","components/HomeScreen.js","components/Clothing.js","components/ClothingScreen.js","components/Accessory.js","components/AccessoriesScreen.js","components/CheckoutScreen.js","components/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["StoreContext","React","createContext","initialState","cartReducer","state","action","type","itemIndex","product","size","findIndex","item","id","color","findItemIndex","newItem","name","quantity","price","toFixed","slice","length","productIndex","update","splice","StoreProvider","children","useReducer","dispatch","Provider","value","useStore","useContext","PrimaryNav","Navbar","sticky","className","expand","Brand","style","to","Toggle","aria-controls","Collapse","Nav","textDecoration","total","reduce","getQuantity","sizes","Array","from","_","i","quantities","Trainer","props","useState","setSize","setQuantity","Col","xs","md","lg","xl","Card","toString","Img","height","objectFit","variant","src","imageUrl","Body","Title","Text","Form","Group","maxWidth","controlId","Label","Control","as","onChange","event","target","map","key","Number","Button","onClick","shoeItem","image","addToStore","Trainers","trainers","setTrainers","addToCart","useEffect","fetch","then","response","json","Container","Row","shoe","HomeScreen","categories","setCategories","Jumbotron","fluid","paddingBottom","paddingTop","category","width","toUpperCase","Clothing","fontSize","clothingItem","ClothingScreen","clothings","setClothings","clothing","colors","Accessory","setColor","accessoryItem","AccessoriesScreen","accessories","setAccessories","accessory","CheckoutScreen","Table","responsive","removeFromCart","textAlign","colSpan","NotFound","App","basename","process","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"uQAEMA,EAAeC,IAAMC,gBACrBC,EAAe,GAarB,SAASC,EAAYC,EAAOC,GAC1B,OAAQA,EAAOC,MACb,IAAK,MACH,IAAMC,EAdU,SAACH,EAAOI,GAAR,OACpBA,EAAQC,KACJL,EAAMM,WACJ,SAAAC,GAAI,OAAIA,EAAKC,KAAOJ,EAAQI,IAAMD,EAAKF,OAASD,EAAQC,QAE1DD,EAAQK,MACRT,EAAMM,WACJ,SAAAC,GAAI,OAAIA,EAAKC,KAAOJ,EAAQI,IAAMD,EAAKE,QAAUL,EAAQK,SAE3DT,EAAMM,WAAU,SAAAC,GAAI,OAAIA,EAAKC,KAAOJ,EAAQI,MAK1BE,CAAcV,EAAOC,EAAOG,SAE9C,IAAmB,IAAfD,EACF,MAAM,GAAN,mBAAWH,GAAX,CAAkBC,EAAOG,UAEzB,IAAMO,EAAU,CACdH,GAAIP,EAAOG,QAAQI,GACnBI,KAAMX,EAAOG,QAAQQ,KACrBP,KAAMJ,EAAOG,QAAQC,KACrBI,MAAOR,EAAOG,QAAQK,MACtBI,SAAUZ,EAAOG,QAAQS,SAAWb,EAAMG,GAAWU,SACrDC,MAAOb,EAAOG,QAAQU,MAAMC,QAAQ,IAUtC,MALkB,sBACbf,EAAMgB,MAAM,EAAGb,IADF,YAEbH,EAAMgB,MAAMb,EAAY,EAAGH,EAAMiB,SAFpB,CAGhBN,IAKN,IAAK,SACH,IAAMO,EAAelB,EAAMM,WACzB,SAAAC,GAAI,OAAIA,EAAKK,OAASX,EAAOG,QAAQQ,QAEvC,GAAIM,EAAe,EACjB,OAAOlB,EAET,IAAMmB,EAAM,YAAOnB,GAEnB,OADAmB,EAAOC,OAAOF,EAAc,GACrBC,EACT,QACE,OAAOnB,GAIN,IAAMqB,EAAgB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACnBC,qBAAWxB,EAAaD,GADL,mBACtCE,EADsC,KAC/BwB,EAD+B,KAE7C,OACE,kBAAC7B,EAAa8B,SAAd,CAAuBC,MAAO,CAAE1B,QAAOwB,aACpCF,IAKMK,EAAW,kBAAM/B,IAAMgC,WAAWjC,IC1BhCkC,EApCI,WAAO,IAAD,EACKF,IAApB3B,EADe,EACfA,MADe,EACRwB,SAWf,OACE,kBAACM,EAAA,EAAD,CAAQC,OAAO,MAAMC,UAAU,eAAeC,OAAO,MACnD,kBAACH,EAAA,EAAOI,MAAR,CAAcC,MAAO,CAAE1B,MAAO,UAC5B,kBAAC,IAAD,CAAM2B,GAAG,KAAT,cAEF,kBAACN,EAAA,EAAOO,OAAR,CAAeC,gBAAc,qBAC7B,kBAACR,EAAA,EAAOS,SAAR,CAAiB/B,GAAG,oBAClB,kBAACgC,EAAA,EAAD,CACER,UAAU,UACVG,MAAO,CAAEM,eAAgB,OAAQhC,MAAO,UAExC,kBAAC,IAAD,CAAM2B,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,cAAT,aACA,kBAAC,IAAD,CAAMA,GAAG,aAAT,YACA,kBAAC,IAAD,CAAMA,GAAG,gBAAT,gBAEF,kBAACI,EAAA,EAAD,CAAKR,UAAU,QACb,kBAAC,IAAD,CAAMI,GAAG,aAAT,YA1BR,WACE,IAAMM,EAAQ1C,EAAM2C,QAAO,SAACD,EAAOnC,GACjC,OAAQmC,EAASnC,EAAKM,WACrB,GACH,GAAI6B,EAAQ,EACV,MAAM,IAAN,OAAWA,EAAX,KAqBmCE,GAA/B,S,gDC9BJC,EAAQC,MAAMC,KAAKD,MAAM,KAAK,SAACE,EAAGC,GAAJ,OAAUA,EAAI,KAC5CC,EAAaJ,MAAMC,KAAKD,MAAM,KAAK,SAACE,EAAGC,GAAJ,OAAUA,EAAI,KA0ExCE,MAxEf,SAAiBC,GAAQ,IAAD,EACEC,mBAASR,EAAM,IADjB,mBACfxC,EADe,KACTiD,EADS,OAEUD,mBAASH,EAAW,IAF9B,mBAEfrC,EAFe,KAEL0C,EAFK,KAyBtB,OACE,kBAACC,EAAA,EAAD,CAAKxB,UAAU,OAAOyB,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC9C,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMzB,GAAI,aAAegB,EAAM5C,GAAGsD,YAChC,kBAACD,EAAA,EAAKE,IAAN,CACE5B,MAAO,CAAE6B,OAAQ,QAASC,UAAW,WACrCC,QAAQ,MACRC,IAAKf,EAAMgB,YAGf,kBAACP,EAAA,EAAKQ,KAAN,CAAWlC,MAAO,CAAE6B,OAAQ,SAC1B,kBAACH,EAAA,EAAKS,MAAN,CAAYnC,MAAO,CAAE6B,OAAQ,SAC3B,4BAAKZ,EAAMxC,OAEb,kBAACiD,EAAA,EAAKU,KAAN,YAAanB,EAAMtC,MAAMC,QAAQ,IACjC,kBAACyD,EAAA,EAAKC,MAAN,CACEtC,MAAO,CAAEuC,SAAU,eACnBC,UAAU,8BAEV,kBAACH,EAAA,EAAKI,MAAN,oBACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,GAAG,SAASC,SAzCX,SAAAC,GACvB1B,EAAQ0B,EAAMC,OAAOvD,QAwCyCA,MAAOrB,GAC1DwC,EAAMqC,KAAI,SAAA7E,GAAI,OACb,4BAAQ8E,IAAK9E,GAAOA,OAGxB,kBAACmE,EAAA,EAAKI,MAAN,kBACA,kBAACJ,EAAA,EAAKK,QAAN,CACE1C,MAAO,CAAEuC,SAAU,eACnBI,GAAG,SACHC,SA9CiB,SAAAC,GAC3BzB,EAAY6B,OAAOJ,EAAMC,OAAOvD,SA8CtBA,MAAOb,GAENqC,EAAWgC,KAAI,SAAArE,GAAQ,OACtB,4BAAQsE,IAAKtE,GAAWA,QAK9B,kBAACwE,EAAA,EAAD,CAAQC,QAnDQ,WACtB,IAAMC,EAAW,CACf/E,GAAI4C,EAAM5C,GACVI,KAAMwC,EAAMxC,KACZE,MAAOsC,EAAMtC,MACb0E,MAAOpC,EAAMgB,SACb/D,KAAMA,EACNQ,SAAUA,GAGZuC,EAAMqC,WAAWF,IAyCuBrB,QAAQ,WAA1C,mBC/BKwB,MAlCf,WAAqB,IAAD,EACcrC,mBAAS,IADvB,mBACXsC,EADW,KACDC,EADC,OAEUjE,IAAbH,GAFG,EAEVxB,MAFU,EAEHwB,UAQf,SAASqE,EAAUN,GACjB/D,EAAS,CAAEpB,QAASmF,EAAUrF,KAAM,QAGtC,OAVA4F,qBAAU,WACRC,MAAM,4CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAL,GAAQ,OAAIC,EAAYD,QAC/B,IAOD,kBAACQ,EAAA,EAAD,CAAWnE,UAAU,QACnB,kBAACoE,EAAA,EAAD,KACGT,EAAST,KAAI,SAAAmB,GACZ,OACE,kBAAC,EAAD,CACElB,IAAKkB,EAAK7F,GACVA,GAAI6F,EAAK7F,GACT4D,SAAUiC,EAAKjC,SACftD,MAAOuF,EAAKvF,MACZF,KAAMyF,EAAKzF,KACX6E,WAAYI,U,QCkCXS,MA5Df,WAAuB,IAAD,EACgBjD,mBAAS,IADzB,mBACbkD,EADa,KACDC,EADC,KAQpB,OANAV,qBAAU,WACRC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAO,GAAU,OAAIC,EAAcD,QACnC,IAGD,oCACE,kBAACE,EAAA,EAAD,CAAWC,OAAK,EAAC1E,UAAU,aACzB,kBAACmE,EAAA,EAAD,CAAWhE,MAAO,CAAEwE,cAAe,OAAQC,WAAY,SACrD,mEACA,yDAIJ,kBAACT,EAAA,EAAD,CAAWnE,UAAU,YACnB,kBAACoE,EAAA,EAAD,KACGG,EAAWrB,KAAI,SAAA2B,GACd,OACE,kBAACrD,EAAA,EAAD,CACE2B,IAAK0B,EAASrG,GACdwB,UAAU,QACVyB,GAAI,GACJC,GAAI,EACJC,GAAI,EACJC,GAAI,GAEJ,kBAAC,IAAD,CAAMxB,GAAIyE,EAASjG,KAAMuB,MAAO,CAAEM,eAAgB,SAChD,kBAACoB,EAAA,EAAD,CAAM7B,UAAU,aACd,kBAAC6B,EAAA,EAAKE,IAAN,CACE/B,UAAU,cACVkC,QAAQ,MACRC,IAAK0C,EAASzC,SACdjC,MAAO,CACL6B,OAAQ,QACR8C,MAAO,OACP7C,UAAW,aAGf,kBAACJ,EAAA,EAAKQ,KAAN,CAAWrC,UAAU,QACnB,kBAAC6B,EAAA,EAAKS,MAAN,CACEtC,UAAU,mBACVG,MAAO,CAAE1B,MAAO,UAEfoG,EAASjG,KAAKmG,0BC9CjClE,EAAQ,CAAC,UAAW,QAAS,SAAU,SACvCK,EAAaJ,MAAMC,KAAKD,MAAM,KAAK,SAACE,EAAGC,GAAJ,OAAUA,EAAI,KA0ExC+D,MAxEf,SAAkB5D,GAAQ,IAAD,EACCC,mBAASR,EAAM,IADhB,mBAChBxC,EADgB,KACViD,EADU,OAESD,mBAASH,EAAW,IAF7B,mBAEhBrC,EAFgB,KAEN0C,EAFM,KAyBvB,OACE,kBAACC,EAAA,EAAD,CAAKxB,UAAU,OAAOyB,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC9C,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMzB,GAAI,cAAgBgB,EAAM5C,GAAGsD,YACjC,kBAACD,EAAA,EAAKE,IAAN,CACE5B,MAAO,CAAE6B,OAAQ,QAASC,UAAW,WACrCC,QAAQ,MACRC,IAAKf,EAAMgB,YAGf,kBAACP,EAAA,EAAKQ,KAAN,CAAWlC,MAAO,CAAE6B,OAAQ,SAC1B,kBAACH,EAAA,EAAKS,MAAN,CAAYnC,MAAO,CAAE6B,OAAQ,OAAQiD,SAAU,SAC5C7D,EAAMxC,MAET,kBAACiD,EAAA,EAAKU,KAAN,YAAanB,EAAMtC,MAAMC,QAAQ,IACjC,kBAACyD,EAAA,EAAKC,MAAN,CACEtC,MAAO,CAAEuC,SAAU,eACnBC,UAAU,8BAEV,kBAACH,EAAA,EAAKI,MAAN,oBACA,kBAACJ,EAAA,EAAKK,QAAN,CAAcC,GAAG,SAASC,SAzCX,SAAAC,GACvB1B,EAAQ0B,EAAMC,OAAOvD,QAwCyCA,MAAOrB,GAC1DwC,EAAMqC,KAAI,SAAA7E,GAAI,OACb,4BAAQ8E,IAAK9E,GAAOA,OAGxB,kBAACmE,EAAA,EAAKI,MAAN,iBACA,kBAACJ,EAAA,EAAKK,QAAN,CACE1C,MAAO,CAAEuC,SAAU,eACnBI,GAAG,SACHC,SA9CiB,SAAAC,GAC3BzB,EAAY6B,OAAOJ,EAAMC,OAAOvD,SA8CtBA,MAAOb,GAENqC,EAAWgC,KAAI,SAAArE,GAAQ,OACtB,4BAAQsE,IAAKtE,GAAWA,QAK9B,kBAACwE,EAAA,EAAD,CAAQC,QAnDQ,WACtB,IAAM4B,EAAe,CACnB1G,GAAI4C,EAAM5C,GACVI,KAAMwC,EAAMxC,KACZE,MAAOsE,OAAOhC,EAAMtC,OACpB0E,MAAOpC,EAAMgB,SACb/D,KAAMA,EACNQ,SAAUA,GAGZuC,EAAMqC,WAAWyB,IAyCuBhD,QAAQ,WAA1C,mBChCKiD,MAjCf,WAA2B,IAAD,EACU9D,mBAAS,IADnB,mBACjB+D,EADiB,KACNC,EADM,OAEI1F,IAAbH,GAFS,EAEhBxB,MAFgB,EAETwB,UAOf,SAASqE,EAAUyB,GACjB9F,EAAS,CAAEpB,QAASkH,EAAUpH,KAAM,QAGtC,OAVA4F,qBAAU,WACRC,MAAM,6CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAoB,GAAS,OAAIC,EAAaD,QACjC,IAOD,kBAACjB,EAAA,EAAD,CAAWnE,UAAU,QACnB,kBAACoE,EAAA,EAAD,KACGgB,EAAUlC,KAAI,SAAAoC,GACb,OACE,kBAAC,EAAD,CACEnC,IAAKmC,EAAS9G,GACdA,GAAI8G,EAAS9G,GACb4D,SAAUkD,EAASlD,SACnBtD,MAAOwG,EAASxG,MAChBF,KAAM0G,EAAS1G,KACf6E,WAAYI,UCxBpB0B,EAAS,CAAC,MAAO,OAAQ,SACzBrE,EAAaJ,MAAMC,KAAKD,MAAM,KAAK,SAACE,EAAGC,GAAJ,OAAUA,EAAI,KA8ExCuE,MA5Ef,SAAmBpE,GAAQ,IAAD,EACEC,mBAASkE,EAAO,IADlB,mBACjB9G,EADiB,KACVgH,EADU,OAEQpE,mBAASH,EAAW,IAF5B,mBAEjBrC,EAFiB,KAEP0C,EAFO,KAyBxB,OACE,kBAACC,EAAA,EAAD,CAAKxB,UAAU,OAAOyB,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAC9C,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMzB,GAAI,gBAAkBgB,EAAM5C,GAAGsD,YACnC,kBAACD,EAAA,EAAKE,IAAN,CACE5B,MAAO,CAAE6B,OAAQ,QAASC,UAAW,WACrCC,QAAQ,MACRC,IAAKf,EAAMgB,YAGf,kBAACP,EAAA,EAAKQ,KAAN,CAAWlC,MAAO,CAAE6B,OAAQ,SAC1B,kBAACH,EAAA,EAAKS,MAAN,CAAYnC,MAAO,CAAE6B,OAAQ,SAC3B,4BAAKZ,EAAMxC,OAEb,kBAACiD,EAAA,EAAKU,KAAN,YAAanB,EAAMtC,MAAMC,QAAQ,IACjC,kBAACyD,EAAA,EAAKC,MAAN,CACEtC,MAAO,CAAEuC,SAAU,eACnBC,UAAU,8BAEV,kBAACH,EAAA,EAAKI,MAAN,qBACA,kBAACJ,EAAA,EAAKK,QAAN,CACEC,GAAG,SACHC,SA3Cc,SAAAC,GACxByC,EAASzC,EAAMC,OAAOvD,QA2CZA,MAAOjB,GAEN8G,EAAOrC,KAAI,SAAAzE,GAAK,OACf,4BAAQ0E,IAAK1E,GAAQA,OAGzB,kBAAC+D,EAAA,EAAKI,MAAN,iBACA,kBAACJ,EAAA,EAAKK,QAAN,CACE1C,MAAO,CAAEuC,SAAU,eACnBI,GAAG,SACHC,SAlDiB,SAAAC,GAC3BzB,EAAY6B,OAAOJ,EAAMC,OAAOvD,SAkDtBA,MAAOb,GAENqC,EAAWgC,KAAI,SAAArE,GAAQ,OACtB,4BAAQsE,IAAKtE,GAAWA,QAK9B,kBAACwE,EAAA,EAAD,CAAQC,QAvDQ,WACtB,IAAMoC,EAAgB,CACpBlH,GAAI4C,EAAM5C,GACVI,KAAMwC,EAAMxC,KACZE,MAAOsE,OAAOhC,EAAMtC,OACpB0E,MAAOpC,EAAMgB,SACb3D,MAAOA,EACPI,SAAUA,GAGZuC,EAAMqC,WAAWiC,IA6CuBxD,QAAQ,WAA1C,mBCpCKyD,MAjCf,WAA8B,IAAD,EACWtE,mBAAS,IADpB,mBACpBuE,EADoB,KACPC,EADO,OAEClG,IAAbH,GAFY,EAEnBxB,MAFmB,EAEZwB,UAOf,SAASqE,EAAUiC,GACjBtG,EAAS,CAAEpB,QAAS0H,EAAW5H,KAAM,QAGvC,OAVA4F,qBAAU,WACRC,MAAM,+CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAA4B,GAAW,OAAIC,EAAeD,QACrC,IAOD,kBAACzB,EAAA,EAAD,CAAWnE,UAAU,QACnB,kBAACoE,EAAA,EAAD,KACGwB,EAAY1C,KAAI,SAAA4C,GACf,OACE,kBAAC,EAAD,CACE3C,IAAK2C,EAAUtH,GACfA,GAAIsH,EAAUtH,GACd4D,SAAU0D,EAAU1D,SACpBtD,MAAOgH,EAAUhH,MACjBF,KAAMkH,EAAUlH,KAChB6E,WAAYI,U,QCmCXkC,MA5Df,WAA2B,IAAD,EACIpG,IAApB3B,EADgB,EAChBA,MAAOwB,EADS,EACTA,SAaf,OACE,kBAAC2E,EAAA,EAAD,CAAWnE,UAAU,sBACnB,kBAACgG,EAAA,EAAD,CAAOxH,GAAG,WAAWwB,UAAU,OAAOiG,WAAW,MAC/C,+BACE,4BACE,oCACA,qCACA,oCACA,0CAIJ,+BACGjI,EAAMkF,KAAI,SAAA3E,GAAI,OACb,wBAAI4E,IAAK5E,EAAKK,MACZ,4BACGL,EAAKK,KADR,IACeL,EAAKE,OAAL,YAAmBF,EAAKE,MAAxB,MAGf,mCAAMF,EAAKO,MAAMC,QAAQ,IACzB,4BAAKR,EAAKF,MAAQ,KAElB,4BAAKE,EAAKM,UACV,4BACE,kBAACwE,EAAA,EAAD,CACErD,UAAU,YACVsD,QAAS,kBArCzB,SAAwB/E,GACtBiB,EAAS,CAAEpB,QAASG,EAAML,KAAM,WAoCHgI,CAAe3H,IAC9B2D,QAAQ,WAHV,eAWN,4BACE,wBAAI/B,MAAO,CAAEgG,UAAW,OAASC,QAAQ,IAAI5H,GAAG,SAAhD,iBA1CWR,EAAM2C,QAAO,SAACD,EAAOnC,GACtC,OAAQmC,EAASnC,EAAKO,MAAQP,EAAKM,WAClC,GAyC8BE,QAAQ,SClD9BsH,MAJf,WACE,OAAO,gE,YC+CMC,MApCf,WACE,OACE,kBAAC,EAAD,KACE,yBAAKtG,UAAU,OACb,kBAAC,IAAD,CAAeuG,SAAUC,eACvB,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,aAChB,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,cAChB,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,gBAChB,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,aAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,KACE,kBAAC,EAAD,UAKR,4BAAQ1G,UAAU,UAAlB,0BCjCc2G,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBvD,MAAK,SAAAwD,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.e04c22df.chunk.js","sourcesContent":["import React, { useReducer } from \"react\";\n\nconst StoreContext = React.createContext();\nconst initialState = [];\n\nconst findItemIndex = (state, product) =>\n  product.size\n    ? state.findIndex(\n        item => item.id === product.id && item.size === product.size\n      )\n    : product.color\n    ? state.findIndex(\n        item => item.id === product.id && item.color === product.color\n      )\n    : state.findIndex(item => item.id === product.id);\n\nfunction cartReducer(state, action) {\n  switch (action.type) {\n    case \"add\":\n      const itemIndex = findItemIndex(state, action.product);\n\n      if (itemIndex === -1) {\n        return [...state, action.product];\n      } else {\n        const newItem = {\n          id: action.product.id,\n          name: action.product.name,\n          size: action.product.size,\n          color: action.product.color,\n          quantity: action.product.quantity + state[itemIndex].quantity,\n          price: action.product.price.toFixed(2)\n          // price:\n          //   action.product.price *\n          //   (action.product.quantity + state[itemIndex].quantity)\n        };\n        const updatedStore = [\n          ...state.slice(0, itemIndex),\n          ...state.slice(itemIndex + 1, state.length),\n          newItem\n        ];\n        return updatedStore;\n      }\n\n    case \"remove\":\n      const productIndex = state.findIndex(\n        item => item.name === action.product.name\n      );\n      if (productIndex < 0) {\n        return state;\n      }\n      const update = [...state];\n      update.splice(productIndex, 1);\n      return update;\n    default:\n      return state;\n  }\n}\n\nexport const StoreProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(cartReducer, initialState);\n  return (\n    <StoreContext.Provider value={{ state, dispatch }}>\n      {children}\n    </StoreContext.Provider>\n  );\n};\n\nexport const useStore = () => React.useContext(StoreContext);\n\n// export default function Product() {\n//   const [cart, setCart] = useReducer(cartReducer, []);\n","import React from \"react\";\nimport { Navbar, Nav, Container } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport { useStore } from \"./storeContext\";\n\nconst PrimaryNav = () => {\n  const { state, dispatch } = useStore();\n\n  function getQuantity() {\n    const total = state.reduce((total, item) => {\n      return (total += item.quantity);\n    }, 0);\n    if (total > 0) {\n      return `(${total})`;\n    }\n  }\n\n  return (\n    <Navbar sticky=\"top\" className=\"navbar-items\" expand=\"md\">\n      <Navbar.Brand style={{ color: \"white\" }}>\n        <Link to=\"/\">Bouna-Sal</Link>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav\n          className=\"mr-auto\"\n          style={{ textDecoration: \"none\", color: \"white\" }}\n        >\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/clothings\">Clothings</Link>\n          <Link to=\"/trainers\">Trainers</Link>\n          <Link to=\"/accessories\">Accessories</Link>\n        </Nav>\n        <Nav className=\"mr-2\">\n          <Link to=\"/checkout\">Checkout {getQuantity()} </Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n};\n\nexport default PrimaryNav;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Card, Button, Form } from \"react-bootstrap\";\n\nconst sizes = Array.from(Array(10), (_, i) => i + 1);\nconst quantities = Array.from(Array(10), (_, i) => i + 1);\n\nfunction Trainer(props) {\n  const [size, setSize] = useState(sizes[0]);\n  const [quantity, setQuantity] = useState(quantities[0]);\n\n  const handleSizeChange = event => {\n    setSize(event.target.value);\n  };\n\n  const handleQuantityChange = event => {\n    setQuantity(Number(event.target.value));\n  };\n\n  const handleAddToCart = () => {\n    const shoeItem = {\n      id: props.id,\n      name: props.name,\n      price: props.price,\n      image: props.imageUrl,\n      size: size,\n      quantity: quantity\n    };\n\n    props.addToStore(shoeItem);\n  };\n\n  return (\n    <Col className=\"mb-5\" xs={12} md={6} lg={4} xl={3}>\n      <Card>\n        <Link to={\"/trainers/\" + props.id.toString()}>\n          <Card.Img\n            style={{ height: \"300px\", objectFit: \"contain\" }}\n            variant=\"top\"\n            src={props.imageUrl}\n          />\n        </Link>\n        <Card.Body style={{ height: \"100%\" }}>\n          <Card.Title style={{ height: \"48px\" }}>\n            <h6>{props.name}</h6>\n          </Card.Title>\n          <Card.Text>£{props.price.toFixed(2)}</Card.Text>\n          <Form.Group\n            style={{ maxWidth: \"fit-content\" }}\n            controlId=\"exampleForm.ControlSelect1\"\n          >\n            <Form.Label>Select Size</Form.Label>\n            <Form.Control as=\"select\" onChange={handleSizeChange} value={size}>\n              {sizes.map(size => (\n                <option key={size}>{size}</option>\n              ))}\n            </Form.Control>\n            <Form.Label> Quantity</Form.Label>\n            <Form.Control\n              style={{ maxWidth: \"fit-content\" }}\n              as=\"select\"\n              onChange={handleQuantityChange}\n              value={quantity}\n            >\n              {quantities.map(quantity => (\n                <option key={quantity}>{quantity}</option>\n              ))}\n            </Form.Control>\n          </Form.Group>\n\n          <Button onClick={handleAddToCart} variant=\"primary\">\n            Add To Cart\n          </Button>\n        </Card.Body>\n      </Card>\n    </Col>\n  );\n}\n\nexport default Trainer;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { Container, Row, Col, Card, Button, Form } from \"react-bootstrap\";\nimport { useStore } from \"./storeContext\";\nimport Trainer from \"./Trainer\";\n\nfunction Trainers() {\n  const [trainers, setTrainers] = useState([]);\n  const { state, dispatch } = useStore();\n\n  useEffect(() => {\n    fetch(\"https://bouna-sal.herokuapp.com/trainers\")\n      .then(response => response.json())\n      .then(trainers => setTrainers(trainers));\n  }, []);\n\n  function addToCart(shoeItem) {\n    dispatch({ product: shoeItem, type: \"add\" });\n  }\n\n  return (\n    <Container className=\"my-5\">\n      <Row>\n        {trainers.map(shoe => {\n          return (\n            <Trainer\n              key={shoe.id}\n              id={shoe.id}\n              imageUrl={shoe.imageUrl}\n              price={shoe.price}\n              name={shoe.name}\n              addToStore={addToCart}\n            />\n          );\n        })}\n      </Row>\n    </Container>\n  );\n}\n\nexport default Trainers;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col, Card, Jumbotron } from \"react-bootstrap\";\n\nfunction HomeScreen() {\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    fetch(\"https://bouna-sal.herokuapp.com/categories\")\n      .then(response => response.json())\n      .then(categories => setCategories(categories));\n  }, []);\n\n  return (\n    <>\n      <Jumbotron fluid className=\"hero mb-0\">\n        <Container style={{ paddingBottom: \"8rem\", paddingTop: \"8rem\" }}>\n          <h1>Become the best version of yourself</h1>\n          <p>Welcome to our home page</p>\n        </Container>\n      </Jumbotron>\n\n      <Container className=\"my-5 gym\">\n        <Row>\n          {categories.map(category => {\n            return (\n              <Col\n                key={category.id}\n                className=\"mb-5 \"\n                xs={12}\n                md={6}\n                lg={4}\n                xl={4}\n              >\n                <Link to={category.name} style={{ textDecoration: \"none\" }}>\n                  <Card className=\"mt-0 py-0\">\n                    <Card.Img\n                      className=\"Home-images\"\n                      variant=\"top\"\n                      src={category.imageUrl}\n                      style={{\n                        height: \"250px\",\n                        width: \"100%\",\n                        objectFit: \"contain\"\n                      }}\n                    />\n                    <Card.Body className=\"py-1\">\n                      <Card.Title\n                        className=\"mb-1 text-center\"\n                        style={{ color: \"black\" }}\n                      >\n                        {category.name.toUpperCase()}\n                      </Card.Title>\n                    </Card.Body>\n                  </Card>\n                </Link>\n              </Col>\n            );\n          })}\n        </Row>\n      </Container>\n    </>\n  );\n}\n\nexport default HomeScreen;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Col, Card, Button, Form } from \"react-bootstrap\";\n\nconst sizes = [\"X-small\", \"Small\", \"Medium\", \"Large\"];\nconst quantities = Array.from(Array(10), (_, i) => i + 1);\n\nfunction Clothing(props) {\n  const [size, setSize] = useState(sizes[0]);\n  const [quantity, setQuantity] = useState(quantities[0]);\n\n  const handleSizeChange = event => {\n    setSize(event.target.value);\n  };\n\n  const handleQuantityChange = event => {\n    setQuantity(Number(event.target.value));\n  };\n\n  const handleAddToCart = () => {\n    const clothingItem = {\n      id: props.id,\n      name: props.name,\n      price: Number(props.price),\n      image: props.imageUrl,\n      size: size,\n      quantity: quantity\n    };\n\n    props.addToStore(clothingItem);\n  };\n\n  return (\n    <Col className=\"mb-5\" xs={12} md={6} lg={4} xl={3}>\n      <Card>\n        <Link to={\"/clothings/\" + props.id.toString()}>\n          <Card.Img\n            style={{ height: \"300px\", objectFit: \"contain\" }}\n            variant=\"top\"\n            src={props.imageUrl}\n          />\n        </Link>\n        <Card.Body style={{ height: \"100%\" }}>\n          <Card.Title style={{ height: \"48px\", fontSize: \"20px\" }}>\n            {props.name}\n          </Card.Title>\n          <Card.Text>£{props.price.toFixed(2)}</Card.Text>\n          <Form.Group\n            style={{ maxWidth: \"fit-content\" }}\n            controlId=\"exampleForm.ControlSelect1\"\n          >\n            <Form.Label>Select Size</Form.Label>\n            <Form.Control as=\"select\" onChange={handleSizeChange} value={size}>\n              {sizes.map(size => (\n                <option key={size}>{size}</option>\n              ))}\n            </Form.Control>\n            <Form.Label>Quantity</Form.Label>\n            <Form.Control\n              style={{ maxWidth: \"fit-content\" }}\n              as=\"select\"\n              onChange={handleQuantityChange}\n              value={quantity}\n            >\n              {quantities.map(quantity => (\n                <option key={quantity}>{quantity}</option>\n              ))}\n            </Form.Control>\n          </Form.Group>\n\n          <Button onClick={handleAddToCart} variant=\"primary\">\n            Add To Cart\n          </Button>\n        </Card.Body>\n      </Card>\n    </Col>\n  );\n}\n\nexport default Clothing;\n","import React, { useState, useEffect } from \"react\";\nimport { Container, Row } from \"react-bootstrap\";\nimport { useStore } from \"./storeContext\";\nimport Clothing from \"./Clothing\";\n\nfunction ClothingScreen() {\n  const [clothings, setClothings] = useState([]);\n  const { state, dispatch } = useStore();\n  useEffect(() => {\n    fetch(\"https://bouna-sal.herokuapp.com/clothings\")\n      .then(response => response.json())\n      .then(clothings => setClothings(clothings));\n  }, []);\n\n  function addToCart(clothing) {\n    dispatch({ product: clothing, type: \"add\" });\n  }\n\n  return (\n    <Container className=\"my-5\">\n      <Row>\n        {clothings.map(clothing => {\n          return (\n            <Clothing\n              key={clothing.id}\n              id={clothing.id}\n              imageUrl={clothing.imageUrl}\n              price={clothing.price}\n              name={clothing.name}\n              addToStore={addToCart}\n            />\n          );\n        })}\n      </Row>\n    </Container>\n  );\n}\n\nexport default ClothingScreen;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport { Col, Card, Button, Form } from \"react-bootstrap\";\n\nconst colors = [\"Red\", \"Blue\", \"Black\"];\nconst quantities = Array.from(Array(10), (_, i) => i + 1);\n\nfunction Accessory(props) {\n  const [color, setColor] = useState(colors[0]);\n  const [quantity, setQuantity] = useState(quantities[0]);\n\n  const handleColorChange = event => {\n    setColor(event.target.value);\n  };\n\n  const handleQuantityChange = event => {\n    setQuantity(Number(event.target.value));\n  };\n\n  const handleAddToCart = () => {\n    const accessoryItem = {\n      id: props.id,\n      name: props.name,\n      price: Number(props.price),\n      image: props.imageUrl,\n      color: color,\n      quantity: quantity\n    };\n\n    props.addToStore(accessoryItem);\n  };\n\n  return (\n    <Col className=\"mb-5\" xs={12} md={6} lg={4} xl={3}>\n      <Card>\n        <Link to={\"/accessories/\" + props.id.toString()}>\n          <Card.Img\n            style={{ height: \"300px\", objectFit: \"contain\" }}\n            variant=\"top\"\n            src={props.imageUrl}\n          />\n        </Link>\n        <Card.Body style={{ height: \"100%\" }}>\n          <Card.Title style={{ height: \"48px\" }}>\n            <h6>{props.name}</h6>\n          </Card.Title>\n          <Card.Text>£{props.price.toFixed(2)}</Card.Text>\n          <Form.Group\n            style={{ maxWidth: \"fit-content\" }}\n            controlId=\"exampleForm.ControlSelect1\"\n          >\n            <Form.Label>Select Color</Form.Label>\n            <Form.Control\n              as=\"select\"\n              onChange={handleColorChange}\n              value={color}\n            >\n              {colors.map(color => (\n                <option key={color}>{color}</option>\n              ))}\n            </Form.Control>\n            <Form.Label>Quantity</Form.Label>\n            <Form.Control\n              style={{ maxWidth: \"fit-content\" }}\n              as=\"select\"\n              onChange={handleQuantityChange}\n              value={quantity}\n            >\n              {quantities.map(quantity => (\n                <option key={quantity}>{quantity}</option>\n              ))}\n            </Form.Control>\n          </Form.Group>\n\n          <Button onClick={handleAddToCart} variant=\"primary\">\n            Add To Cart\n          </Button>\n        </Card.Body>\n      </Card>\n    </Col>\n  );\n}\n\nexport default Accessory;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Row, Col, Card, Button, Form } from \"react-bootstrap\";\nimport { useStore, storeContext } from \"./storeContext\";\nimport Accessory from \"./Accessory\";\n\nfunction AccessoriesScreen() {\n  const [accessories, setAccessories] = useState([]);\n  const { state, dispatch } = useStore();\n  useEffect(() => {\n    fetch(\"https://bouna-sal.herokuapp.com/accessories\")\n      .then(response => response.json())\n      .then(accessories => setAccessories(accessories));\n  }, []);\n\n  function addToCart(accessory) {\n    dispatch({ product: accessory, type: \"add\" });\n  }\n\n  return (\n    <Container className=\"my-5\">\n      <Row>\n        {accessories.map(accessory => {\n          return (\n            <Accessory\n              key={accessory.id}\n              id={accessory.id}\n              imageUrl={accessory.imageUrl}\n              price={accessory.price}\n              name={accessory.name}\n              addToStore={addToCart}\n            />\n          );\n        })}\n      </Row>\n    </Container>\n  );\n}\n\nexport default AccessoriesScreen;\n","import React, { useState } from \"react\";\n\nimport { useStore } from \"./storeContext\";\nimport { Button, Container, Table } from \"react-bootstrap\";\n\nfunction CheckoutScreen() {\n  const { state, dispatch } = useStore();\n\n  function removeFromCart(item) {\n    dispatch({ product: item, type: \"remove\" });\n  }\n\n  function getTotal() {\n    const totalPrice = state.reduce((total, item) => {\n      return (total += item.price * item.quantity);\n    }, 0);\n    return totalPrice;\n  }\n\n  return (\n    <Container className=\"ml-2 mt-5 checkout\">\n      <Table id=\"checkout\" className=\"mt-5\" responsive=\"sm\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Price</th>\n            <th>Size</th>\n            <th>Quantity</th>\n           \n          </tr>\n        </thead>\n        <tbody>\n          {state.map(item => (\n            <tr key={item.name}>\n              <td>\n                {item.name} {item.color && ` (${item.color})`}\n              </td>\n\n              <td>£{item.price.toFixed(2)}</td>\n              <td>{item.size || \"-\"}</td>\n\n              <td>{item.quantity}</td>\n              <td>\n                <Button\n                  className=\"ml-1 py-0\"\n                  onClick={() => removeFromCart(item)}\n                  variant=\"primary\"\n                >\n                  Remove\n                </Button>\n              </td>\n            </tr>\n          ))}\n\n          <tr>\n            <td style={{ textAlign: \"end\" }} colSpan=\"2\" id=\"total\">\n              Total is :£{getTotal().toFixed(2)}\n            </td>\n          </tr>\n        </tbody>\n      </Table>\n    </Container>\n  );\n}\n\nexport default CheckoutScreen;\n","import React from \"react\";\n\nfunction NotFound() {\n  return <h1>We are are Sorry Page Not Found</h1>;\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport { BrowserRouter, Route, Link, Switch } from \"react-router-dom\";\n\nimport Navbar from \"./components/Navbar\";\nimport Trainers from \"./components/Trainers\";\nimport HomeScreen from \"./components/HomeScreen\";\nimport ClothingScreen from \"./components/ClothingScreen\";\nimport AccessoriesScreen from \"./components/AccessoriesScreen\";\nimport { StoreProvider } from \"./components/storeContext\";\nimport CheckoutScreen from \"./components/CheckoutScreen\";\nimport NotFound from \"./components/NotFound\";\nimport index from \"./index.css\";\nimport { NOTFOUND } from \"dns\";\n\nfunction App() {\n  return (\n    <StoreProvider>\n      <div className=\"App\">\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\">\n              <HomeScreen />\n            </Route>\n            <Route exact path=\"/trainers\">\n              <Trainers />\n            </Route>\n\n            <Route exact path=\"/clothings\">\n              <ClothingScreen />\n            </Route>\n\n            <Route exact path=\"/accessories\">\n              <AccessoriesScreen />\n            </Route>\n\n            <Route exact path=\"/checkout\">\n              <CheckoutScreen />\n            </Route>\n            <Route>\n              <NotFound />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n      </div>\n      <footer className=\"footer\"> All rights Reserved</footer>\n    </StoreProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport index from \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}